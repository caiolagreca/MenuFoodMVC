// <auto-generated />
using MenuMVC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MenuMVC.Migrations
{
    [DbContext(typeof(MenuContext))]
    [Migration("20240825075720_New Items")]
    partial class NewItems
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MenuMVC.Models.Dish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Dishes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageUrl = "margherita.jpg",
                            Name = "Margherita",
                            Price = 7.5
                        },
                        new
                        {
                            Id = 2,
                            ImageUrl = "pepperoni.jpg",
                            Name = "Pepperoni",
                            Price = 8.5
                        },
                        new
                        {
                            Id = 3,
                            ImageUrl = "bbqchicken.jpg",
                            Name = "BBQ Chicken",
                            Price = 9.0
                        },
                        new
                        {
                            Id = 4,
                            ImageUrl = "hawaiian.jpg",
                            Name = "Hawaiian",
                            Price = 8.0
                        },
                        new
                        {
                            Id = 5,
                            ImageUrl = "veggiedelight.jpg",
                            Name = "Veggie Delight",
                            Price = 7.75
                        });
                });

            modelBuilder.Entity("MenuMVC.Models.DishIngredient", b =>
                {
                    b.Property<int>("DishId")
                        .HasColumnType("int");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.HasKey("DishId", "IngredientId");

                    b.HasIndex("IngredientId");

                    b.ToTable("DishIngredients");

                    b.HasData(
                        new
                        {
                            DishId = 1,
                            IngredientId = 1
                        },
                        new
                        {
                            DishId = 1,
                            IngredientId = 2
                        },
                        new
                        {
                            DishId = 2,
                            IngredientId = 1
                        },
                        new
                        {
                            DishId = 2,
                            IngredientId = 2
                        },
                        new
                        {
                            DishId = 2,
                            IngredientId = 3
                        },
                        new
                        {
                            DishId = 3,
                            IngredientId = 2
                        },
                        new
                        {
                            DishId = 3,
                            IngredientId = 4
                        },
                        new
                        {
                            DishId = 3,
                            IngredientId = 5
                        },
                        new
                        {
                            DishId = 4,
                            IngredientId = 1
                        },
                        new
                        {
                            DishId = 4,
                            IngredientId = 2
                        },
                        new
                        {
                            DishId = 4,
                            IngredientId = 6
                        },
                        new
                        {
                            DishId = 4,
                            IngredientId = 7
                        },
                        new
                        {
                            DishId = 5,
                            IngredientId = 2
                        },
                        new
                        {
                            DishId = 5,
                            IngredientId = 8
                        },
                        new
                        {
                            DishId = 5,
                            IngredientId = 9
                        },
                        new
                        {
                            DishId = 5,
                            IngredientId = 10
                        });
                });

            modelBuilder.Entity("MenuMVC.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Tomato Sauce"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Mozzarella"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Pepperoni"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Chicken"
                        },
                        new
                        {
                            Id = 5,
                            Name = "BBQ Sauce"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Pineapple"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Ham"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Green Peppers"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Onions"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Olives"
                        });
                });

            modelBuilder.Entity("MenuMVC.Models.DishIngredient", b =>
                {
                    b.HasOne("MenuMVC.Models.Dish", "Dish")
                        .WithMany("DishIngredients")
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MenuMVC.Models.Ingredient", "Ingredient")
                        .WithMany("DishIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dish");

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("MenuMVC.Models.Dish", b =>
                {
                    b.Navigation("DishIngredients");
                });

            modelBuilder.Entity("MenuMVC.Models.Ingredient", b =>
                {
                    b.Navigation("DishIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
